type Recipe {
  id: ID!
  name: String!
  images: [Image!]!
  servings: String!
  time: RecipeTimeType
  ingredients: [String!]!
  instructions: [String!]!

  # Metadata
  slug: String!
  numOfLikes: Int
  date: MetaDate!
  createdBy: User!
  isLiked: Boolean
  importUrl: String
}

type RecipeTimeType {
  prep: String
  cook: String
  ready: String
  active: String
  inactive: String
  total: String!
}

# Cursor Pagination types
type RecipeEdge {
  cursor: ID!
  node: Recipe
}
type RecipeConnection {
  edges: [RecipeEdge!]
  pageInfo: PageInfo!
}

extend type Query {
  getRecipeDetail(slug: String!): Recipe
  getRecipes(
    limit: Int!
    cursor: ID
    sort: CursorSortInput!
    filters: [RecipeFilterInput!]
  ): RecipeConnection!
}

input RecipeFilterInput {
  userSub: IDFilterInput
}
