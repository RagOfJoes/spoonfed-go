# Custom Scalars
scalar Any
scalar Date
scalar Email
# scalar ObjectId

directive @goModel(
  model: String
  models: [String!]
) on OBJECT | INPUT_OBJECT | SCALAR | ENUM | INTERFACE | UNION

directive @goField(
  forceResolver: Boolean
  name: String
) on INPUT_FIELD_DEFINITION | FIELD_DEFINITION

# Enums
enum SortOrder {
  ASC
  DESC
}

enum FilterCondition {
  EQUALS
  NOT_EQUALS

  LESS_THAN
  GREATER_THAN
  LESS_THAN_EQUAL
  GREATER_THAN_EQUAL
  BETWEEN

  IS
  IS_NULL
  IS_NOT_NULL

  IN
  NOT_IN

  LIKE
  ILIKE
  NOT_LIKE
}

# File Types
type Image {
  url: String!
  name: String!
  caption: String
}

type MetaDate {
  creation: Date!
  lastUpdate: Date
}

type PageInfo {
  cursor: ID!
  hasNextPage: Boolean!
}

input SortInput {
  key: String!
  order: SortOrder!
}

input FilterInput {
  key: String!
  condition: FilterCondition!
  value: Any
  values: [Any!]
}

input ImageInput {
  url: String!
  name: String!
  caption: String!
}

# These are to be extended for further useage
type Query {
  rootQuery: String
}
type Mutation {
  rootMutation: String
}
type Subscription {
  rootSubscription: String
}
